#! /usr/bin/env python
# encoding: utf-8

import ibexutils
import os, sys
from waflib import Logs

######################
###### options #######
######################
def options (opt):
	grp_name = "Gaol options (when --interval-lib=gaol is used)"
	grp = opt.add_option_group (grp_name)
	grp.add_option ("--gaol-dir", action="store", type="string", dest="GAOL_PATH", default = "", help = "location of the Gaol lib and include directories (by default use the one in 3rd directory)")
	grp.add_option ("--mathlib-dir", action="store", type="string", dest="MATHLIB_PATH", default = "", help = "location of the Mathlib/ultim lib and include directories (by default use the one in 3rd directory)")

######################
##### configure ######
######################
def configure (conf):
	if conf.env["INTERVAL_LIB"]:
		conf.fatal ("Trying to configure a second library for interval arithmetic")
	conf.env["INTERVAL_LIB"] = "GAOL"

	gaol_dir = conf.options.GAOL_PATH
	mathlib_dir = conf.options.MATHLIB_PATH

	if mathlib_dir != "":
		conf.msg("Using library mathlib/ultim from", mathlib_dir)
		mathlib_include = os.path.join (mathlib_dir, "include")
		mathlib_lib = os.path.join (mathlib_dir, "lib")
		conf.env.append_unique ("INCLUDES_IBEX_DEPS", mathlib_include)
		conf.env.append_unique ("LIBPATH_IBEX_DEPS", mathlib_lib)
	else:
		conf.msg("Using library mathlib/ultim from", "3rd/ subdirectory")
		mathlib_archive = "mathlib-2.1.0.tar.gz"
		mathlib_ret = conf.configure_3rd_party_with_autotools (mathlib_archive)
		mathlib_include, mathlib_lib = mathlib_ret
		conf.env.INSTALL_3RD = True

	# Looking for mathlib header and library (called ultim)
	conf.check_cxx (header_name = "MathLib.h", includes = mathlib_include,
		use = [ "IBEX", "ITV_LIB" ], uselib_store= "ITV_LIB")
	conf.check_cxx (lib = "ultim", libpath = mathlib_lib,
		use = [ "IBEX", "ITV_LIB" ], uselib_store = "ITV_LIB")

	if gaol_dir != "":
		conf.msg ("Using library gaol from", gaol_dir)
		gaol_include = os.path.join (gaol_dir, "include")
		gaol_lib = os.path.join (gaol_dir, "lib")
		conf.env.append_unique ("INCLUDES_IBEX_DEPS", gaol_include)
		conf.env.append_unique ("LIBPATH_IBEX_DEPS", gaol_lib)
	else:
		conf.msg ("Using library gaol from", "3rd/ subdirectory")
		gaol_archive = "gaol-4.2.0.tar.gz"
		args = "--with-mathlib-include=%s" % mathlib_include
		args += " --with-mathlib-lib=%s" % mathlib_lib
		gaol_ret = conf.configure_3rd_party_with_autotools (gaol_archive, args)
		gaol_include, gaol_lib = gaol_ret
		conf.env.INSTALL_3RD = True

	# Looking for gdtoa header and library (it should be provided gaol)
	conf.check_cxx (header_name = "gdtoa/gdtoa.h", includes = gaol_include,
		use = [ "IBEX", "ITV_LIB" ], uselib_store="ITV_LIB")
	conf.check_cxx (lib = "gdtoa", libpath = gaol_lib,
		use = [ "IBEX", "ITV_LIB" ], uselib_store = "ITV_LIB")

	# Looking for gaol headers and library.
	# We also test if we need to add sse2 or sse3 flags.
	D = {"header_name": "gaol/gaol.h", "mandatory": False, "errmsg": "no",
				"includes": gaol_include, "use": [ "IBEX", "ITV_LIB" ],
				"uselib_store": "ITV_LIB"}
	ret = conf.check_cxx (**D)
	if not ret:
		D["cxxflags"] = "-msse2"
		D["msg"] = "Checking for header "+D["header_name"]+" with "+D["cxxflags"]
		ret = conf.check_cxx (**D)
	if not ret:
		D["cxxflags"] = "-msse3"
		D["msg"] = "Checking for header "+D["header_name"]+" with "+D["cxxflags"]
		ret = conf.check_cxx (**D)
	if not ret:
		conf.fatal ("Cannot find C++ flags to add to use gaol/gaol.h")

	conf.check_cxx (header_name = "gaol/gaol_interval.h", includes = gaol_include,
		use = [ "IBEX", "ITV_LIB" ], uselib_store = "ITV_LIB")
	conf.check_cxx (lib = "gaol", libpath = gaol_lib,
		use = [ "IBEX", "ITV_LIB" ], uselib_store = "ITV_LIB")
